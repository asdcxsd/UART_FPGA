|uart_test
CLOCK_50 => clk.IN1
KEY[0] => _.IN1
KEY[1] => _.IN1
KEY[2] => KEY[2].IN1
LEDG[0] << fifo:U_Controller.led_test
LEDG[1] << fifo:U_Controller.led_test
LEDG[2] << fifo:U_Controller.led_test
LEDR[0] << fifo:U_Controller.led_red
LEDR[1] << fifo:U_Controller.led_red
LEDR[2] << fifo:U_Controller.led_red
LEDR[3] << fifo:U_Controller.led_red
LEDR[4] << fifo:U_Controller.led_red
LEDR[5] << fifo:U_Controller.led_red
LEDR[6] << fifo:U_Controller.led_red
LEDR[7] << fifo:U_Controller.led_red
LEDR[8] << fifo:U_Controller.led_red
LEDR[9] << fifo:U_Controller.led_red
LEDR[10] << fifo:U_Controller.led_red
LEDR[11] << fifo:U_Controller.led_red
LEDR[12] << fifo:U_Controller.led_red
LEDR[13] << fifo:U_Controller.led_red
LEDR[14] << fifo:U_Controller.led_red
LEDR[15] << fifo:U_Controller.led_red
MY_RXD => MY_RXD.IN1
MY_TXD << uart_regs:U_Driver.stx_pad_o


|uart_test|my_pll:U_PLL
areset => areset.IN1
inclk0 => sub_wire7[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk
c3 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|uart_test|my_pll:U_PLL|altpll:altpll_component
inclk[0] => my_pll_altpll:auto_generated.inclk[0]
inclk[1] => my_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => my_pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= my_pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|uart_test|my_pll:U_PLL|altpll:altpll_component|my_pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|uart_test|fifo:U_Controller
Enable => led_2.OUTPUTSELECT
Enable => led_1.OUTPUTSELECT
Enable => led_3.OUTPUTSELECT
Enable => state.DATAB
Enable => Selector78.IN1
CLK => led_2.CLK
CLK => string_NHAP_MA_TAU[11][0].CLK
CLK => string_NHAP_MA_TAU[11][1].CLK
CLK => string_NHAP_MA_TAU[11][2].CLK
CLK => string_NHAP_MA_TAU[11][3].CLK
CLK => string_NHAP_MA_TAU[11][4].CLK
CLK => string_NHAP_MA_TAU[11][5].CLK
CLK => string_NHAP_MA_TAU[11][6].CLK
CLK => string_NHAP_MA_TAU[11][7].CLK
CLK => string_NHAP_MA_TAU[10][0].CLK
CLK => string_NHAP_MA_TAU[10][1].CLK
CLK => string_NHAP_MA_TAU[10][2].CLK
CLK => string_NHAP_MA_TAU[10][3].CLK
CLK => string_NHAP_MA_TAU[10][4].CLK
CLK => string_NHAP_MA_TAU[10][5].CLK
CLK => string_NHAP_MA_TAU[10][6].CLK
CLK => string_NHAP_MA_TAU[10][7].CLK
CLK => string_NHAP_MA_TAU[9][0].CLK
CLK => string_NHAP_MA_TAU[9][1].CLK
CLK => string_NHAP_MA_TAU[9][2].CLK
CLK => string_NHAP_MA_TAU[9][3].CLK
CLK => string_NHAP_MA_TAU[9][4].CLK
CLK => string_NHAP_MA_TAU[9][5].CLK
CLK => string_NHAP_MA_TAU[9][6].CLK
CLK => string_NHAP_MA_TAU[9][7].CLK
CLK => string_NHAP_MA_TAU[8][0].CLK
CLK => string_NHAP_MA_TAU[8][1].CLK
CLK => string_NHAP_MA_TAU[8][2].CLK
CLK => string_NHAP_MA_TAU[8][3].CLK
CLK => string_NHAP_MA_TAU[8][4].CLK
CLK => string_NHAP_MA_TAU[8][5].CLK
CLK => string_NHAP_MA_TAU[8][6].CLK
CLK => string_NHAP_MA_TAU[8][7].CLK
CLK => string_NHAP_MA_TAU[7][0].CLK
CLK => string_NHAP_MA_TAU[7][1].CLK
CLK => string_NHAP_MA_TAU[7][2].CLK
CLK => string_NHAP_MA_TAU[7][3].CLK
CLK => string_NHAP_MA_TAU[7][4].CLK
CLK => string_NHAP_MA_TAU[7][5].CLK
CLK => string_NHAP_MA_TAU[7][6].CLK
CLK => string_NHAP_MA_TAU[7][7].CLK
CLK => string_NHAP_MA_TAU[6][0].CLK
CLK => string_NHAP_MA_TAU[6][1].CLK
CLK => string_NHAP_MA_TAU[6][2].CLK
CLK => string_NHAP_MA_TAU[6][3].CLK
CLK => string_NHAP_MA_TAU[6][4].CLK
CLK => string_NHAP_MA_TAU[6][5].CLK
CLK => string_NHAP_MA_TAU[6][6].CLK
CLK => string_NHAP_MA_TAU[6][7].CLK
CLK => string_NHAP_MA_TAU[5][0].CLK
CLK => string_NHAP_MA_TAU[5][1].CLK
CLK => string_NHAP_MA_TAU[5][2].CLK
CLK => string_NHAP_MA_TAU[5][3].CLK
CLK => string_NHAP_MA_TAU[5][4].CLK
CLK => string_NHAP_MA_TAU[5][5].CLK
CLK => string_NHAP_MA_TAU[5][6].CLK
CLK => string_NHAP_MA_TAU[5][7].CLK
CLK => string_NHAP_MA_TAU[4][0].CLK
CLK => string_NHAP_MA_TAU[4][1].CLK
CLK => string_NHAP_MA_TAU[4][2].CLK
CLK => string_NHAP_MA_TAU[4][3].CLK
CLK => string_NHAP_MA_TAU[4][4].CLK
CLK => string_NHAP_MA_TAU[4][5].CLK
CLK => string_NHAP_MA_TAU[4][6].CLK
CLK => string_NHAP_MA_TAU[4][7].CLK
CLK => string_NHAP_MA_TAU[3][0].CLK
CLK => string_NHAP_MA_TAU[3][1].CLK
CLK => string_NHAP_MA_TAU[3][2].CLK
CLK => string_NHAP_MA_TAU[3][3].CLK
CLK => string_NHAP_MA_TAU[3][4].CLK
CLK => string_NHAP_MA_TAU[3][5].CLK
CLK => string_NHAP_MA_TAU[3][6].CLK
CLK => string_NHAP_MA_TAU[3][7].CLK
CLK => string_NHAP_MA_TAU[2][0].CLK
CLK => string_NHAP_MA_TAU[2][1].CLK
CLK => string_NHAP_MA_TAU[2][2].CLK
CLK => string_NHAP_MA_TAU[2][3].CLK
CLK => string_NHAP_MA_TAU[2][4].CLK
CLK => string_NHAP_MA_TAU[2][5].CLK
CLK => string_NHAP_MA_TAU[2][6].CLK
CLK => string_NHAP_MA_TAU[2][7].CLK
CLK => string_NHAP_MA_TAU[1][0].CLK
CLK => string_NHAP_MA_TAU[1][1].CLK
CLK => string_NHAP_MA_TAU[1][2].CLK
CLK => string_NHAP_MA_TAU[1][3].CLK
CLK => string_NHAP_MA_TAU[1][4].CLK
CLK => string_NHAP_MA_TAU[1][5].CLK
CLK => string_NHAP_MA_TAU[1][6].CLK
CLK => string_NHAP_MA_TAU[1][7].CLK
CLK => string_NHAP_MA_TAU[0][0].CLK
CLK => string_NHAP_MA_TAU[0][1].CLK
CLK => string_NHAP_MA_TAU[0][2].CLK
CLK => string_NHAP_MA_TAU[0][3].CLK
CLK => string_NHAP_MA_TAU[0][4].CLK
CLK => string_NHAP_MA_TAU[0][5].CLK
CLK => string_NHAP_MA_TAU[0][6].CLK
CLK => string_NHAP_MA_TAU[0][7].CLK
CLK => data_input[0].CLK
CLK => data_input[1].CLK
CLK => data_input[2].CLK
CLK => data_input[3].CLK
CLK => data_input[4].CLK
CLK => data_input[5].CLK
CLK => data_input[6].CLK
CLK => data_input[7].CLK
CLK => data_input[8].CLK
CLK => data_input[9].CLK
CLK => data_input[10].CLK
CLK => data_input[11].CLK
CLK => data_input[12].CLK
CLK => data_input[13].CLK
CLK => data_input[14].CLK
CLK => data_input[15].CLK
CLK => input_red[0].CLK
CLK => input_red[1].CLK
CLK => input_red[2].CLK
CLK => input_red[3].CLK
CLK => input_red[4].CLK
CLK => input_red[5].CLK
CLK => input_red[6].CLK
CLK => input_red[7].CLK
CLK => input_red[8].CLK
CLK => input_red[9].CLK
CLK => input_red[10].CLK
CLK => input_red[11].CLK
CLK => input_red[12].CLK
CLK => input_red[13].CLK
CLK => input_red[14].CLK
CLK => input_red[15].CLK
CLK => r_counter2[0].CLK
CLK => r_counter2[1].CLK
CLK => r_counter2[2].CLK
CLK => r_counter2[3].CLK
CLK => r_counter2[4].CLK
CLK => r_counter2[5].CLK
CLK => r_counter2[6].CLK
CLK => r_counter2[7].CLK
CLK => r_counter2[8].CLK
CLK => r_counter2[9].CLK
CLK => r_counter2[10].CLK
CLK => r_counter2[11].CLK
CLK => r_counter2[12].CLK
CLK => r_counter2[13].CLK
CLK => r_counter2[14].CLK
CLK => r_counter2[15].CLK
CLK => r_counter2[16].CLK
CLK => r_counter2[17].CLK
CLK => r_counter2[18].CLK
CLK => r_counter2[19].CLK
CLK => r_counter2[20].CLK
CLK => r_counter2[21].CLK
CLK => r_counter2[22].CLK
CLK => r_counter2[23].CLK
CLK => r_counter2[24].CLK
CLK => r_counter2[25].CLK
CLK => r_counter2[26].CLK
CLK => r_counter2[27].CLK
CLK => r_counter2[28].CLK
CLK => r_counter2[29].CLK
CLK => r_counter2[30].CLK
CLK => r_counter2[31].CLK
CLK => r_counter[0].CLK
CLK => r_counter[1].CLK
CLK => r_counter[2].CLK
CLK => r_counter[3].CLK
CLK => r_counter[4].CLK
CLK => r_counter[5].CLK
CLK => r_counter[6].CLK
CLK => r_counter[7].CLK
CLK => r_counter[8].CLK
CLK => r_counter[9].CLK
CLK => r_counter[10].CLK
CLK => r_counter[11].CLK
CLK => r_counter[12].CLK
CLK => r_counter[13].CLK
CLK => r_counter[14].CLK
CLK => r_counter[15].CLK
CLK => r_counter[16].CLK
CLK => r_counter[17].CLK
CLK => r_counter[18].CLK
CLK => r_counter[19].CLK
CLK => r_counter[20].CLK
CLK => r_counter[21].CLK
CLK => r_counter[22].CLK
CLK => r_counter[23].CLK
CLK => r_counter[24].CLK
CLK => r_counter[25].CLK
CLK => r_counter[26].CLK
CLK => r_counter[27].CLK
CLK => r_counter[28].CLK
CLK => r_counter[29].CLK
CLK => r_counter[30].CLK
CLK => r_counter[31].CLK
CLK => led_3.CLK
CLK => led_1.CLK
CLK => uart_re_o~reg0.CLK
CLK => uart_we_o~reg0.CLK
CLK => uart_wdata_o[0]~reg0.CLK
CLK => uart_wdata_o[1]~reg0.CLK
CLK => uart_wdata_o[2]~reg0.CLK
CLK => uart_wdata_o[3]~reg0.CLK
CLK => uart_wdata_o[4]~reg0.CLK
CLK => uart_wdata_o[5]~reg0.CLK
CLK => uart_wdata_o[6]~reg0.CLK
CLK => uart_wdata_o[7]~reg0.CLK
CLK => uart_addr_o[0]~reg0.CLK
CLK => uart_addr_o[1]~reg0.CLK
CLK => uart_addr_o[2]~reg0.CLK
CLK => state~1.DATAIN
RESET => data_input[0].ACLR
RESET => data_input[1].ACLR
RESET => data_input[2].ACLR
RESET => data_input[3].ACLR
RESET => data_input[4].ACLR
RESET => data_input[5].ACLR
RESET => data_input[6].ACLR
RESET => data_input[7].ACLR
RESET => data_input[8].ACLR
RESET => data_input[9].ACLR
RESET => data_input[10].ACLR
RESET => data_input[11].ACLR
RESET => data_input[12].ACLR
RESET => data_input[13].ACLR
RESET => data_input[14].ACLR
RESET => data_input[15].ACLR
RESET => input_red[0].ACLR
RESET => input_red[1].ACLR
RESET => input_red[2].ACLR
RESET => input_red[3].ACLR
RESET => input_red[4].ACLR
RESET => input_red[5].ACLR
RESET => input_red[6].ACLR
RESET => input_red[7].ACLR
RESET => input_red[8].ACLR
RESET => input_red[9].ACLR
RESET => input_red[10].ACLR
RESET => input_red[11].ACLR
RESET => input_red[12].ACLR
RESET => input_red[13].ACLR
RESET => input_red[14].ACLR
RESET => input_red[15].ACLR
RESET => r_counter2[0].ACLR
RESET => r_counter2[1].ACLR
RESET => r_counter2[2].ACLR
RESET => r_counter2[3].ACLR
RESET => r_counter2[4].ACLR
RESET => r_counter2[5].ACLR
RESET => r_counter2[6].ACLR
RESET => r_counter2[7].ACLR
RESET => r_counter2[8].ACLR
RESET => r_counter2[9].ACLR
RESET => r_counter2[10].ACLR
RESET => r_counter2[11].ACLR
RESET => r_counter2[12].ACLR
RESET => r_counter2[13].ACLR
RESET => r_counter2[14].ACLR
RESET => r_counter2[15].ACLR
RESET => r_counter2[16].ACLR
RESET => r_counter2[17].ACLR
RESET => r_counter2[18].ACLR
RESET => r_counter2[19].ACLR
RESET => r_counter2[20].ACLR
RESET => r_counter2[21].ACLR
RESET => r_counter2[22].ACLR
RESET => r_counter2[23].ACLR
RESET => r_counter2[24].ACLR
RESET => r_counter2[25].ACLR
RESET => r_counter2[26].ACLR
RESET => r_counter2[27].ACLR
RESET => r_counter2[28].ACLR
RESET => r_counter2[29].ACLR
RESET => r_counter2[30].ACLR
RESET => r_counter2[31].ACLR
RESET => r_counter[0].ACLR
RESET => r_counter[1].ACLR
RESET => r_counter[2].ACLR
RESET => r_counter[3].ACLR
RESET => r_counter[4].ACLR
RESET => r_counter[5].ACLR
RESET => r_counter[6].ACLR
RESET => r_counter[7].ACLR
RESET => r_counter[8].ACLR
RESET => r_counter[9].ACLR
RESET => r_counter[10].ACLR
RESET => r_counter[11].ACLR
RESET => r_counter[12].ACLR
RESET => r_counter[13].ACLR
RESET => r_counter[14].ACLR
RESET => r_counter[15].ACLR
RESET => r_counter[16].ACLR
RESET => r_counter[17].ACLR
RESET => r_counter[18].ACLR
RESET => r_counter[19].ACLR
RESET => r_counter[20].ACLR
RESET => r_counter[21].ACLR
RESET => r_counter[22].ACLR
RESET => r_counter[23].ACLR
RESET => r_counter[24].ACLR
RESET => r_counter[25].ACLR
RESET => r_counter[26].ACLR
RESET => r_counter[27].ACLR
RESET => r_counter[28].ACLR
RESET => r_counter[29].ACLR
RESET => r_counter[30].ACLR
RESET => r_counter[31].ACLR
RESET => led_3.ACLR
RESET => led_1.PRESET
RESET => uart_re_o~reg0.ACLR
RESET => uart_we_o~reg0.ACLR
RESET => uart_wdata_o[0]~reg0.ACLR
RESET => uart_wdata_o[1]~reg0.ACLR
RESET => uart_wdata_o[2]~reg0.ACLR
RESET => uart_wdata_o[3]~reg0.ACLR
RESET => uart_wdata_o[4]~reg0.ACLR
RESET => uart_wdata_o[5]~reg0.ACLR
RESET => uart_wdata_o[6]~reg0.ACLR
RESET => uart_wdata_o[7]~reg0.ACLR
RESET => uart_addr_o[0]~reg0.ACLR
RESET => uart_addr_o[1]~reg0.ACLR
RESET => uart_addr_o[2]~reg0.ACLR
RESET => state~3.DATAIN
RESET => string_NHAP_MA_TAU[0][7].ENA
RESET => string_NHAP_MA_TAU[0][6].ENA
RESET => string_NHAP_MA_TAU[0][5].ENA
RESET => string_NHAP_MA_TAU[0][4].ENA
RESET => string_NHAP_MA_TAU[0][3].ENA
RESET => string_NHAP_MA_TAU[0][2].ENA
RESET => string_NHAP_MA_TAU[0][1].ENA
RESET => string_NHAP_MA_TAU[0][0].ENA
RESET => string_NHAP_MA_TAU[1][7].ENA
RESET => string_NHAP_MA_TAU[1][6].ENA
RESET => string_NHAP_MA_TAU[1][5].ENA
RESET => string_NHAP_MA_TAU[1][4].ENA
RESET => string_NHAP_MA_TAU[1][3].ENA
RESET => string_NHAP_MA_TAU[1][2].ENA
RESET => string_NHAP_MA_TAU[1][1].ENA
RESET => string_NHAP_MA_TAU[1][0].ENA
RESET => string_NHAP_MA_TAU[2][7].ENA
RESET => string_NHAP_MA_TAU[2][6].ENA
RESET => string_NHAP_MA_TAU[2][5].ENA
RESET => string_NHAP_MA_TAU[2][4].ENA
RESET => string_NHAP_MA_TAU[2][3].ENA
RESET => string_NHAP_MA_TAU[2][2].ENA
RESET => string_NHAP_MA_TAU[2][1].ENA
RESET => string_NHAP_MA_TAU[2][0].ENA
RESET => string_NHAP_MA_TAU[3][7].ENA
RESET => string_NHAP_MA_TAU[3][6].ENA
RESET => string_NHAP_MA_TAU[3][5].ENA
RESET => string_NHAP_MA_TAU[3][4].ENA
RESET => string_NHAP_MA_TAU[3][3].ENA
RESET => string_NHAP_MA_TAU[3][2].ENA
RESET => string_NHAP_MA_TAU[3][1].ENA
RESET => string_NHAP_MA_TAU[3][0].ENA
RESET => string_NHAP_MA_TAU[4][7].ENA
RESET => string_NHAP_MA_TAU[4][6].ENA
RESET => string_NHAP_MA_TAU[4][5].ENA
RESET => string_NHAP_MA_TAU[4][4].ENA
RESET => string_NHAP_MA_TAU[4][3].ENA
RESET => string_NHAP_MA_TAU[4][2].ENA
RESET => string_NHAP_MA_TAU[4][1].ENA
RESET => string_NHAP_MA_TAU[4][0].ENA
RESET => string_NHAP_MA_TAU[5][7].ENA
RESET => string_NHAP_MA_TAU[5][6].ENA
RESET => string_NHAP_MA_TAU[5][5].ENA
RESET => string_NHAP_MA_TAU[5][4].ENA
RESET => string_NHAP_MA_TAU[5][3].ENA
RESET => string_NHAP_MA_TAU[5][2].ENA
RESET => string_NHAP_MA_TAU[5][1].ENA
RESET => string_NHAP_MA_TAU[5][0].ENA
RESET => string_NHAP_MA_TAU[6][7].ENA
RESET => string_NHAP_MA_TAU[6][6].ENA
RESET => string_NHAP_MA_TAU[6][5].ENA
RESET => string_NHAP_MA_TAU[6][4].ENA
RESET => string_NHAP_MA_TAU[6][3].ENA
RESET => string_NHAP_MA_TAU[6][2].ENA
RESET => string_NHAP_MA_TAU[6][1].ENA
RESET => string_NHAP_MA_TAU[6][0].ENA
RESET => string_NHAP_MA_TAU[7][7].ENA
RESET => string_NHAP_MA_TAU[7][6].ENA
RESET => string_NHAP_MA_TAU[7][5].ENA
RESET => string_NHAP_MA_TAU[7][4].ENA
RESET => string_NHAP_MA_TAU[7][3].ENA
RESET => string_NHAP_MA_TAU[7][2].ENA
RESET => string_NHAP_MA_TAU[7][1].ENA
RESET => string_NHAP_MA_TAU[7][0].ENA
RESET => string_NHAP_MA_TAU[8][7].ENA
RESET => string_NHAP_MA_TAU[8][6].ENA
RESET => string_NHAP_MA_TAU[8][5].ENA
RESET => string_NHAP_MA_TAU[8][4].ENA
RESET => string_NHAP_MA_TAU[8][3].ENA
RESET => string_NHAP_MA_TAU[8][2].ENA
RESET => string_NHAP_MA_TAU[8][1].ENA
RESET => string_NHAP_MA_TAU[8][0].ENA
RESET => string_NHAP_MA_TAU[9][7].ENA
RESET => string_NHAP_MA_TAU[9][6].ENA
RESET => string_NHAP_MA_TAU[9][5].ENA
RESET => string_NHAP_MA_TAU[9][4].ENA
RESET => string_NHAP_MA_TAU[9][3].ENA
RESET => string_NHAP_MA_TAU[9][2].ENA
RESET => string_NHAP_MA_TAU[9][1].ENA
RESET => string_NHAP_MA_TAU[9][0].ENA
RESET => string_NHAP_MA_TAU[10][7].ENA
RESET => string_NHAP_MA_TAU[10][6].ENA
RESET => string_NHAP_MA_TAU[10][5].ENA
RESET => string_NHAP_MA_TAU[10][4].ENA
RESET => string_NHAP_MA_TAU[10][3].ENA
RESET => string_NHAP_MA_TAU[10][2].ENA
RESET => string_NHAP_MA_TAU[10][1].ENA
RESET => led_2.ENA
RESET => string_NHAP_MA_TAU[10][0].ENA
RESET => string_NHAP_MA_TAU[11][7].ENA
RESET => string_NHAP_MA_TAU[11][6].ENA
RESET => string_NHAP_MA_TAU[11][5].ENA
RESET => string_NHAP_MA_TAU[11][4].ENA
RESET => string_NHAP_MA_TAU[11][3].ENA
RESET => string_NHAP_MA_TAU[11][2].ENA
RESET => string_NHAP_MA_TAU[11][1].ENA
RESET => string_NHAP_MA_TAU[11][0].ENA
uart_addr_o[0] <= uart_addr_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_addr_o[1] <= uart_addr_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_addr_o[2] <= uart_addr_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[0] <= uart_wdata_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[1] <= uart_wdata_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[2] <= uart_wdata_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[3] <= uart_wdata_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[4] <= uart_wdata_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[5] <= uart_wdata_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[6] <= uart_wdata_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_wdata_o[7] <= uart_wdata_o[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rdata_i[0] => uart_addr_o.OUTPUTSELECT
uart_rdata_i[0] => uart_addr_o.OUTPUTSELECT
uart_rdata_i[0] => uart_addr_o.OUTPUTSELECT
uart_rdata_i[0] => uart_we_o.OUTPUTSELECT
uart_rdata_i[0] => uart_re_o.OUTPUTSELECT
uart_rdata_i[0] => Equal0.IN15
uart_rdata_i[0] => Equal1.IN15
uart_rdata_i[0] => data_input.DATAB
uart_rdata_i[0] => state.DATAB
uart_rdata_i[0] => Selector80.IN2
uart_rdata_i[1] => Equal0.IN14
uart_rdata_i[1] => Equal1.IN14
uart_rdata_i[1] => data_input.DATAB
uart_rdata_i[2] => Equal0.IN13
uart_rdata_i[2] => Equal1.IN13
uart_rdata_i[2] => data_input.DATAB
uart_rdata_i[3] => Equal0.IN12
uart_rdata_i[3] => Equal1.IN12
uart_rdata_i[3] => data_input.DATAB
uart_rdata_i[4] => Equal0.IN11
uart_rdata_i[4] => Equal1.IN11
uart_rdata_i[4] => data_input.DATAB
uart_rdata_i[5] => Equal0.IN10
uart_rdata_i[5] => Equal1.IN10
uart_rdata_i[5] => data_input.DATAB
uart_rdata_i[6] => Equal0.IN9
uart_rdata_i[6] => Equal1.IN9
uart_rdata_i[6] => data_input.DATAB
uart_rdata_i[7] => Equal0.IN8
uart_rdata_i[7] => Equal1.IN8
uart_rdata_i[7] => data_input.DATAB
uart_we_o <= uart_we_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_re_o <= uart_re_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
cont_key => state.DATAB
cont_key => Selector78.IN2
led_test[0] <= led_1.DB_MAX_OUTPUT_PORT_TYPE
led_test[1] <= led_2.DB_MAX_OUTPUT_PORT_TYPE
led_test[2] <= led_3.DB_MAX_OUTPUT_PORT_TYPE
led_red[0] <= input_red[0].DB_MAX_OUTPUT_PORT_TYPE
led_red[1] <= input_red[1].DB_MAX_OUTPUT_PORT_TYPE
led_red[2] <= input_red[2].DB_MAX_OUTPUT_PORT_TYPE
led_red[3] <= input_red[3].DB_MAX_OUTPUT_PORT_TYPE
led_red[4] <= input_red[4].DB_MAX_OUTPUT_PORT_TYPE
led_red[5] <= input_red[5].DB_MAX_OUTPUT_PORT_TYPE
led_red[6] <= input_red[6].DB_MAX_OUTPUT_PORT_TYPE
led_red[7] <= input_red[7].DB_MAX_OUTPUT_PORT_TYPE
led_red[8] <= input_red[8].DB_MAX_OUTPUT_PORT_TYPE
led_red[9] <= input_red[9].DB_MAX_OUTPUT_PORT_TYPE
led_red[10] <= input_red[10].DB_MAX_OUTPUT_PORT_TYPE
led_red[11] <= input_red[11].DB_MAX_OUTPUT_PORT_TYPE
led_red[12] <= input_red[12].DB_MAX_OUTPUT_PORT_TYPE
led_red[13] <= input_red[13].DB_MAX_OUTPUT_PORT_TYPE
led_red[14] <= input_red[14].DB_MAX_OUTPUT_PORT_TYPE
led_red[15] <= input_red[15].DB_MAX_OUTPUT_PORT_TYPE


|uart_test|uart_regs:U_Driver
clk => clk.IN3
wb_rst_i => wb_rst_i.IN3
wb_addr_i[0] => Mux0.IN6
wb_addr_i[0] => Mux1.IN6
wb_addr_i[0] => Mux2.IN6
wb_addr_i[0] => Mux3.IN6
wb_addr_i[0] => Mux4.IN5
wb_addr_i[0] => Mux5.IN5
wb_addr_i[0] => Mux6.IN5
wb_addr_i[0] => Mux7.IN5
wb_addr_i[0] => Equal0.IN2
wb_addr_i[0] => Equal1.IN1
wb_addr_i[0] => Equal2.IN0
wb_addr_i[0] => Equal3.IN2
wb_addr_i[0] => Equal4.IN2
wb_addr_i[0] => Equal5.IN2
wb_addr_i[0] => Equal6.IN1
wb_addr_i[0] => Equal7.IN2
wb_addr_i[1] => Mux0.IN5
wb_addr_i[1] => Mux1.IN5
wb_addr_i[1] => Mux2.IN5
wb_addr_i[1] => Mux3.IN5
wb_addr_i[1] => Mux4.IN4
wb_addr_i[1] => Mux5.IN4
wb_addr_i[1] => Mux6.IN4
wb_addr_i[1] => Mux7.IN4
wb_addr_i[1] => Equal0.IN0
wb_addr_i[1] => Equal1.IN2
wb_addr_i[1] => Equal2.IN2
wb_addr_i[1] => Equal3.IN1
wb_addr_i[1] => Equal4.IN1
wb_addr_i[1] => Equal5.IN1
wb_addr_i[1] => Equal6.IN0
wb_addr_i[1] => Equal7.IN1
wb_addr_i[2] => Mux0.IN4
wb_addr_i[2] => Mux1.IN4
wb_addr_i[2] => Mux2.IN4
wb_addr_i[2] => Mux3.IN4
wb_addr_i[2] => Mux4.IN3
wb_addr_i[2] => Mux5.IN3
wb_addr_i[2] => Mux6.IN3
wb_addr_i[2] => Mux7.IN3
wb_addr_i[2] => Equal0.IN1
wb_addr_i[2] => Equal1.IN0
wb_addr_i[2] => Equal2.IN1
wb_addr_i[2] => Equal3.IN0
wb_addr_i[2] => Equal4.IN0
wb_addr_i[2] => Equal5.IN0
wb_addr_i[2] => Equal6.IN2
wb_addr_i[2] => Equal7.IN0
wb_dat_i[0] => wb_dat_i[0].IN1
wb_dat_i[1] => wb_dat_i[1].IN1
wb_dat_i[2] => wb_dat_i[2].IN1
wb_dat_i[3] => wb_dat_i[3].IN1
wb_dat_i[4] => wb_dat_i[4].IN1
wb_dat_i[5] => wb_dat_i[5].IN1
wb_dat_i[6] => wb_dat_i[6].IN1
wb_dat_i[7] => wb_dat_i[7].IN1
wb_dat_o[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
wb_dat_o[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
wb_we_i => fifo_write.IN1
wb_we_i => always4.IN1
wb_we_i => always5.IN1
wb_we_i => always6.IN1
wb_we_i => always7.IN1
wb_we_i => always8.IN1
wb_re_i => lsr_mask_condition.IN1
wb_re_i => iir_read.IN1
wb_re_i => msr_read.IN1
wb_re_i => fifo_read.IN1
modem_inputs[0] => dcd_c.DATAA
modem_inputs[0] => msr.IN1
modem_inputs[0] => delayed_modem_signals[3].DATAIN
modem_inputs[1] => ri_c.DATAA
modem_inputs[1] => msr.IN1
modem_inputs[1] => delayed_modem_signals[2].DATAIN
modem_inputs[2] => dsr_c.DATAA
modem_inputs[2] => msr.IN1
modem_inputs[2] => delayed_modem_signals[1].DATAIN
modem_inputs[3] => cts_c.DATAA
modem_inputs[3] => msr.IN1
modem_inputs[3] => delayed_modem_signals[0].DATAIN
stx_pad_o <= stx_pad_o.DB_MAX_OUTPUT_PORT_TYPE
srx_pad_i => srx_pad_i.IN1
rts_pad_o <= mcr[1].DB_MAX_OUTPUT_PORT_TYPE
dtr_pad_o <= mcr[0].DB_MAX_OUTPUT_PORT_TYPE
int_o <= int_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
baud_o <= enable.DB_MAX_OUTPUT_PORT_TYPE


|uart_test|uart_regs:U_Driver|uart_transmitter:transmitter
clk => clk.IN1
wb_rst_i => wb_rst_i.IN1
lcr[0] => Mux0.IN5
lcr[0] => Equal0.IN5
lcr[0] => Mux8.IN1
lcr[1] => Mux0.IN4
lcr[1] => Equal0.IN4
lcr[1] => Mux7.IN1
lcr[2] => Equal0.IN3
lcr[2] => counter.DATAB
lcr[3] => tstate.DATAA
lcr[3] => tstate.DATAA
lcr[3] => bit_out.OUTPUTSELECT
lcr[3] => tstate.DATAA
lcr[4] => Mux1.IN4
lcr[5] => Mux1.IN3
lcr[6] => stx_pad_o.OUTPUTSELECT
lcr[7] => ~NO_FANOUT~
tf_push => tf_push.IN1
wb_dat_i[0] => tf_data_in[0].IN1
wb_dat_i[1] => tf_data_in[1].IN1
wb_dat_i[2] => tf_data_in[2].IN1
wb_dat_i[3] => tf_data_in[3].IN1
wb_dat_i[4] => tf_data_in[4].IN1
wb_dat_i[5] => tf_data_in[5].IN1
wb_dat_i[6] => tf_data_in[6].IN1
wb_dat_i[7] => tf_data_in[7].IN1
enable => tf_pop.OUTPUTSELECT
enable => bit_counter[0].ENA
enable => tstate[2]~reg0.ENA
enable => tstate[1]~reg0.ENA
enable => tstate[0]~reg0.ENA
enable => stx_o_tmp.ENA
enable => counter[4].ENA
enable => counter[3].ENA
enable => counter[2].ENA
enable => counter[1].ENA
enable => counter[0].ENA
enable => shift_out[6].ENA
enable => shift_out[5].ENA
enable => shift_out[4].ENA
enable => shift_out[3].ENA
enable => shift_out[2].ENA
enable => shift_out[1].ENA
enable => shift_out[0].ENA
enable => bit_out.ENA
enable => parity_xor.ENA
enable => bit_counter[2].ENA
enable => bit_counter[1].ENA
stx_pad_o <= stx_pad_o.DB_MAX_OUTPUT_PORT_TYPE
tstate[0] <= tstate[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tstate[1] <= tstate[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tstate[2] <= tstate[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tf_count[0] <= uart_tfifo:fifo_tx.count
tf_count[1] <= uart_tfifo:fifo_tx.count
tf_count[2] <= uart_tfifo:fifo_tx.count
tf_count[3] <= uart_tfifo:fifo_tx.count
tf_count[4] <= uart_tfifo:fifo_tx.count
tx_reset => tx_reset.IN1
lsr_mask => lsr_mask.IN1


|uart_test|uart_regs:U_Driver|uart_transmitter:transmitter|uart_tfifo:fifo_tx
clk => clk.IN1
wb_rst_i => overrun~reg0.ACLR
wb_rst_i => count[0]~reg0.ACLR
wb_rst_i => count[1]~reg0.ACLR
wb_rst_i => count[2]~reg0.ACLR
wb_rst_i => count[3]~reg0.ACLR
wb_rst_i => count[4]~reg0.ACLR
wb_rst_i => bottom[0].ACLR
wb_rst_i => bottom[1].ACLR
wb_rst_i => bottom[2].ACLR
wb_rst_i => bottom[3].ACLR
wb_rst_i => top[0].ACLR
wb_rst_i => top[1].ACLR
wb_rst_i => top[2].ACLR
wb_rst_i => top[3].ACLR
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
data_out[0] <= raminfr:tfifo.dpo
data_out[1] <= raminfr:tfifo.dpo
data_out[2] <= raminfr:tfifo.dpo
data_out[3] <= raminfr:tfifo.dpo
data_out[4] <= raminfr:tfifo.dpo
data_out[5] <= raminfr:tfifo.dpo
data_out[6] <= raminfr:tfifo.dpo
data_out[7] <= raminfr:tfifo.dpo
push => push.IN1
pop => Mux0.IN3
pop => Mux1.IN3
pop => Mux2.IN3
pop => Mux3.IN3
pop => Decoder0.IN1
pop => Mux4.IN3
pop => Mux5.IN3
pop => Mux6.IN3
pop => Mux7.IN3
pop => Mux8.IN3
overrun <= overrun~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => always1.IN0
reset_status => always1.IN1


|uart_test|uart_regs:U_Driver|uart_transmitter:transmitter|uart_tfifo:fifo_tx|raminfr:tfifo
clk => ram.we_a.CLK
clk => ram.waddr_a[4].CLK
clk => ram.waddr_a[3].CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => ram.CLK0
we => ram.we_a.DATAIN
we => ram.WE
a[0] => ram.waddr_a[0].DATAIN
a[0] => ram.WADDR
a[1] => ram.waddr_a[1].DATAIN
a[1] => ram.WADDR1
a[2] => ram.waddr_a[2].DATAIN
a[2] => ram.WADDR2
a[3] => ram.waddr_a[3].DATAIN
a[3] => ram.WADDR3
dpra[0] => ram.RADDR
dpra[1] => ram.RADDR1
dpra[2] => ram.RADDR2
dpra[3] => ram.RADDR3
di[0] => ram.data_a[0].DATAIN
di[0] => ram.DATAIN
di[1] => ram.data_a[1].DATAIN
di[1] => ram.DATAIN1
di[2] => ram.data_a[2].DATAIN
di[2] => ram.DATAIN2
di[3] => ram.data_a[3].DATAIN
di[3] => ram.DATAIN3
di[4] => ram.data_a[4].DATAIN
di[4] => ram.DATAIN4
di[5] => ram.data_a[5].DATAIN
di[5] => ram.DATAIN5
di[6] => ram.data_a[6].DATAIN
di[6] => ram.DATAIN6
di[7] => ram.data_a[7].DATAIN
di[7] => ram.DATAIN7
dpo[0] <= ram.DATAOUT
dpo[1] <= ram.DATAOUT1
dpo[2] <= ram.DATAOUT2
dpo[3] <= ram.DATAOUT3
dpo[4] <= ram.DATAOUT4
dpo[5] <= ram.DATAOUT5
dpo[6] <= ram.DATAOUT6
dpo[7] <= ram.DATAOUT7


|uart_test|uart_regs:U_Driver|uart_sync_flops:i_uart_sync_flops
rst_i => sync_dat_o[0]~reg0.PRESET
rst_i => flop_0[0].PRESET
clk_i => sync_dat_o[0]~reg0.CLK
clk_i => flop_0[0].CLK
stage1_rst_i => sync_dat_o.OUTPUTSELECT
stage1_clk_en_i => sync_dat_o.OUTPUTSELECT
async_dat_i[0] => flop_0[0].DATAIN
sync_dat_o[0] <= sync_dat_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_test|uart_regs:U_Driver|uart_receiver:receiver
clk => clk.IN1
wb_rst_i => wb_rst_i.IN1
lcr[0] => Decoder0.IN1
lcr[0] => Mux0.IN1
lcr[0] => Mux1.IN1
lcr[0] => Decoder2.IN3
lcr[0] => Decoder3.IN2
lcr[0] => Decoder4.IN2
lcr[0] => Selector15.IN4
lcr[1] => Decoder0.IN0
lcr[1] => Mux0.IN0
lcr[1] => Mux1.IN0
lcr[1] => Decoder2.IN2
lcr[1] => Decoder4.IN1
lcr[1] => Selector14.IN4
lcr[2] => Decoder2.IN1
lcr[2] => Decoder3.IN1
lcr[2] => Decoder4.IN0
lcr[3] => rparity_error.OUTPUTSELECT
lcr[3] => Decoder2.IN0
lcr[3] => Decoder3.IN0
lcr[3] => rstate.DATAB
lcr[3] => rstate.DATAB
lcr[3] => rstate.DATAB
lcr[4] => Mux2.IN3
lcr[5] => Mux2.IN2
lcr[6] => ~NO_FANOUT~
lcr[7] => ~NO_FANOUT~
rf_pop => rf_pop.IN1
srx_pad_i => rshift.DATAB
srx_pad_i => Mux0.IN2
srx_pad_i => Mux1.IN2
srx_pad_i => rshift.DATAB
srx_pad_i => rparity.DATAB
srx_pad_i => always0.IN1
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => counter_b.OUTPUTSELECT
srx_pad_i => always0.IN1
srx_pad_i => rstate.DATAB
srx_pad_i => rstate.DATAB
srx_pad_i => rframing_error.DATAB
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => rf_data_in.OUTPUTSELECT
enable => always3.IN1
enable => always4.IN1
enable => rstate[3]~reg0.ENA
enable => rstate[2]~reg0.ENA
enable => rstate[1]~reg0.ENA
enable => rstate[0]~reg0.ENA
enable => rcounter16[3].ENA
enable => rcounter16[2].ENA
enable => rcounter16[1].ENA
enable => rcounter16[0].ENA
enable => rbit_counter[2].ENA
enable => rbit_counter[1].ENA
enable => rbit_counter[0].ENA
enable => rparity_xor.ENA
enable => rframing_error.ENA
enable => rparity_error.ENA
enable => rparity.ENA
enable => rshift[7].ENA
enable => rshift[6].ENA
enable => rshift[5].ENA
enable => rshift[4].ENA
enable => rshift[3].ENA
enable => rshift[2].ENA
enable => rshift[1].ENA
enable => rshift[0].ENA
enable => rf_push.ENA
counter_t[0] <= counter_t[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[1] <= counter_t[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[2] <= counter_t[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[3] <= counter_t[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[4] <= counter_t[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[5] <= counter_t[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[6] <= counter_t[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[7] <= counter_t[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[8] <= counter_t[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_t[9] <= counter_t[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rf_count[0] <= uart_rfifo:fifo_rx.count
rf_count[1] <= uart_rfifo:fifo_rx.count
rf_count[2] <= uart_rfifo:fifo_rx.count
rf_count[3] <= uart_rfifo:fifo_rx.count
rf_count[4] <= uart_rfifo:fifo_rx.count
rf_data_out[0] <= uart_rfifo:fifo_rx.data_out
rf_data_out[1] <= uart_rfifo:fifo_rx.data_out
rf_data_out[2] <= uart_rfifo:fifo_rx.data_out
rf_data_out[3] <= uart_rfifo:fifo_rx.data_out
rf_data_out[4] <= uart_rfifo:fifo_rx.data_out
rf_data_out[5] <= uart_rfifo:fifo_rx.data_out
rf_data_out[6] <= uart_rfifo:fifo_rx.data_out
rf_data_out[7] <= uart_rfifo:fifo_rx.data_out
rf_data_out[8] <= uart_rfifo:fifo_rx.data_out
rf_data_out[9] <= uart_rfifo:fifo_rx.data_out
rf_data_out[10] <= uart_rfifo:fifo_rx.data_out
rf_error_bit <= uart_rfifo:fifo_rx.error_bit
rf_overrun <= uart_rfifo:fifo_rx.overrun
rx_reset => rx_reset.IN1
lsr_mask => lsr_mask.IN1
rstate[0] <= rstate[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstate[1] <= rstate[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstate[2] <= rstate[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstate[3] <= rstate[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rf_push_pulse <= rf_push_pulse.DB_MAX_OUTPUT_PORT_TYPE


|uart_test|uart_regs:U_Driver|uart_receiver:receiver|uart_rfifo:fifo_rx
clk => clk.IN1
wb_rst_i => overrun~reg0.ACLR
wb_rst_i => fifo[0][0].ACLR
wb_rst_i => fifo[0][1].ACLR
wb_rst_i => fifo[0][2].ACLR
wb_rst_i => fifo[1][0].ACLR
wb_rst_i => fifo[1][1].ACLR
wb_rst_i => fifo[1][2].ACLR
wb_rst_i => fifo[2][0].ACLR
wb_rst_i => fifo[2][1].ACLR
wb_rst_i => fifo[2][2].ACLR
wb_rst_i => fifo[3][0].ACLR
wb_rst_i => fifo[3][1].ACLR
wb_rst_i => fifo[3][2].ACLR
wb_rst_i => fifo[4][0].ACLR
wb_rst_i => fifo[4][1].ACLR
wb_rst_i => fifo[4][2].ACLR
wb_rst_i => fifo[5][0].ACLR
wb_rst_i => fifo[5][1].ACLR
wb_rst_i => fifo[5][2].ACLR
wb_rst_i => fifo[6][0].ACLR
wb_rst_i => fifo[6][1].ACLR
wb_rst_i => fifo[6][2].ACLR
wb_rst_i => fifo[7][0].ACLR
wb_rst_i => fifo[7][1].ACLR
wb_rst_i => fifo[7][2].ACLR
wb_rst_i => fifo[8][0].ACLR
wb_rst_i => fifo[8][1].ACLR
wb_rst_i => fifo[8][2].ACLR
wb_rst_i => fifo[9][0].ACLR
wb_rst_i => fifo[9][1].ACLR
wb_rst_i => fifo[9][2].ACLR
wb_rst_i => fifo[10][0].ACLR
wb_rst_i => fifo[10][1].ACLR
wb_rst_i => fifo[10][2].ACLR
wb_rst_i => fifo[11][0].ACLR
wb_rst_i => fifo[11][1].ACLR
wb_rst_i => fifo[11][2].ACLR
wb_rst_i => fifo[12][0].ACLR
wb_rst_i => fifo[12][1].ACLR
wb_rst_i => fifo[12][2].ACLR
wb_rst_i => fifo[13][0].ACLR
wb_rst_i => fifo[13][1].ACLR
wb_rst_i => fifo[13][2].ACLR
wb_rst_i => fifo[14][0].ACLR
wb_rst_i => fifo[14][1].ACLR
wb_rst_i => fifo[14][2].ACLR
wb_rst_i => fifo[15][0].ACLR
wb_rst_i => fifo[15][1].ACLR
wb_rst_i => fifo[15][2].ACLR
wb_rst_i => fifo[16][0].ACLR
wb_rst_i => fifo[16][1].ACLR
wb_rst_i => fifo[16][2].ACLR
wb_rst_i => fifo[17][0].ACLR
wb_rst_i => fifo[17][1].ACLR
wb_rst_i => fifo[17][2].ACLR
wb_rst_i => fifo[18][0].ACLR
wb_rst_i => fifo[18][1].ACLR
wb_rst_i => fifo[18][2].ACLR
wb_rst_i => fifo[19][0].ACLR
wb_rst_i => fifo[19][1].ACLR
wb_rst_i => fifo[19][2].ACLR
wb_rst_i => fifo[20][0].ACLR
wb_rst_i => fifo[20][1].ACLR
wb_rst_i => fifo[20][2].ACLR
wb_rst_i => fifo[21][0].ACLR
wb_rst_i => fifo[21][1].ACLR
wb_rst_i => fifo[21][2].ACLR
wb_rst_i => fifo[22][0].ACLR
wb_rst_i => fifo[22][1].ACLR
wb_rst_i => fifo[22][2].ACLR
wb_rst_i => fifo[23][0].ACLR
wb_rst_i => fifo[23][1].ACLR
wb_rst_i => fifo[23][2].ACLR
wb_rst_i => fifo[24][0].ACLR
wb_rst_i => fifo[24][1].ACLR
wb_rst_i => fifo[24][2].ACLR
wb_rst_i => fifo[25][0].ACLR
wb_rst_i => fifo[25][1].ACLR
wb_rst_i => fifo[25][2].ACLR
wb_rst_i => fifo[26][0].ACLR
wb_rst_i => fifo[26][1].ACLR
wb_rst_i => fifo[26][2].ACLR
wb_rst_i => fifo[27][0].ACLR
wb_rst_i => fifo[27][1].ACLR
wb_rst_i => fifo[27][2].ACLR
wb_rst_i => fifo[28][0].ACLR
wb_rst_i => fifo[28][1].ACLR
wb_rst_i => fifo[28][2].ACLR
wb_rst_i => fifo[29][0].ACLR
wb_rst_i => fifo[29][1].ACLR
wb_rst_i => fifo[29][2].ACLR
wb_rst_i => fifo[30][0].ACLR
wb_rst_i => fifo[30][1].ACLR
wb_rst_i => fifo[30][2].ACLR
wb_rst_i => fifo[31][0].ACLR
wb_rst_i => fifo[31][1].ACLR
wb_rst_i => fifo[31][2].ACLR
wb_rst_i => count[0]~reg0.ACLR
wb_rst_i => count[1]~reg0.ACLR
wb_rst_i => count[2]~reg0.ACLR
wb_rst_i => count[3]~reg0.ACLR
wb_rst_i => count[4]~reg0.ACLR
wb_rst_i => bottom[0].ACLR
wb_rst_i => bottom[1].ACLR
wb_rst_i => bottom[2].ACLR
wb_rst_i => bottom[3].ACLR
wb_rst_i => top[0].ACLR
wb_rst_i => top[1].ACLR
wb_rst_i => top[2].ACLR
wb_rst_i => top[3].ACLR
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[0] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[1] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[2] => fifo.DATAB
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
data_in[8] => data_in[8].IN1
data_in[9] => data_in[9].IN1
data_in[10] => data_in[10].IN1
data_out[0] <= Mux59.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= Mux58.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= Mux57.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= raminfr:rfifo.dpo
data_out[4] <= raminfr:rfifo.dpo
data_out[5] <= raminfr:rfifo.dpo
data_out[6] <= raminfr:rfifo.dpo
data_out[7] <= raminfr:rfifo.dpo
data_out[8] <= raminfr:rfifo.dpo
data_out[9] <= raminfr:rfifo.dpo
data_out[10] <= raminfr:rfifo.dpo
push => push.IN1
pop => Mux0.IN3
pop => Mux1.IN3
pop => Mux2.IN3
pop => Mux3.IN3
pop => Decoder2.IN1
pop => Mux4.IN4
pop => Mux5.IN4
pop => Mux6.IN4
pop => Mux7.IN4
pop => Mux8.IN4
pop => Mux9.IN4
pop => Mux10.IN4
pop => Mux11.IN4
pop => Mux12.IN4
pop => Mux13.IN4
pop => Mux14.IN4
pop => Mux15.IN4
pop => Mux16.IN4
pop => Mux17.IN4
pop => Mux18.IN4
pop => Mux19.IN4
pop => Mux20.IN4
pop => Mux21.IN4
pop => Mux22.IN4
pop => Mux23.IN4
pop => Mux24.IN4
pop => Mux25.IN4
pop => Mux26.IN4
pop => Mux27.IN4
pop => Mux28.IN4
pop => Mux29.IN4
pop => Mux30.IN4
pop => Mux31.IN4
pop => Mux32.IN4
pop => Mux33.IN4
pop => Mux34.IN4
pop => Mux35.IN4
pop => Mux36.IN4
pop => Mux37.IN4
pop => Mux38.IN4
pop => Mux39.IN4
pop => Mux40.IN4
pop => Mux41.IN4
pop => Mux42.IN4
pop => Mux43.IN4
pop => Mux44.IN4
pop => Mux45.IN4
pop => Mux46.IN4
pop => Mux47.IN4
pop => Mux48.IN4
pop => Mux49.IN4
pop => Mux50.IN4
pop => Mux51.IN4
pop => Mux52.IN3
pop => Mux53.IN3
pop => Mux54.IN3
pop => Mux55.IN3
pop => Mux56.IN3
overrun <= overrun~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_bit <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => top.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => bottom.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => count.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => fifo.OUTPUTSELECT
fifo_reset => always1.IN0
fifo_reset => fifo[31][2].ENA
fifo_reset => fifo[31][1].ENA
fifo_reset => fifo[31][0].ENA
fifo_reset => fifo[30][2].ENA
fifo_reset => fifo[30][1].ENA
fifo_reset => fifo[30][0].ENA
fifo_reset => fifo[29][2].ENA
fifo_reset => fifo[29][1].ENA
fifo_reset => fifo[29][0].ENA
fifo_reset => fifo[28][2].ENA
fifo_reset => fifo[28][1].ENA
fifo_reset => fifo[28][0].ENA
fifo_reset => fifo[27][2].ENA
fifo_reset => fifo[27][1].ENA
fifo_reset => fifo[27][0].ENA
fifo_reset => fifo[26][2].ENA
fifo_reset => fifo[26][1].ENA
fifo_reset => fifo[26][0].ENA
fifo_reset => fifo[25][2].ENA
fifo_reset => fifo[25][1].ENA
fifo_reset => fifo[25][0].ENA
fifo_reset => fifo[24][2].ENA
fifo_reset => fifo[24][1].ENA
fifo_reset => fifo[24][0].ENA
fifo_reset => fifo[23][2].ENA
fifo_reset => fifo[23][1].ENA
fifo_reset => fifo[23][0].ENA
fifo_reset => fifo[22][2].ENA
fifo_reset => fifo[22][1].ENA
fifo_reset => fifo[22][0].ENA
fifo_reset => fifo[21][2].ENA
fifo_reset => fifo[21][1].ENA
fifo_reset => fifo[21][0].ENA
fifo_reset => fifo[20][2].ENA
fifo_reset => fifo[20][1].ENA
fifo_reset => fifo[20][0].ENA
fifo_reset => fifo[19][2].ENA
fifo_reset => fifo[19][1].ENA
fifo_reset => fifo[19][0].ENA
fifo_reset => fifo[18][2].ENA
fifo_reset => fifo[18][1].ENA
fifo_reset => fifo[18][0].ENA
fifo_reset => fifo[17][2].ENA
fifo_reset => fifo[17][1].ENA
fifo_reset => fifo[17][0].ENA
fifo_reset => fifo[16][2].ENA
fifo_reset => fifo[16][1].ENA
fifo_reset => fifo[16][0].ENA
reset_status => always1.IN1


|uart_test|uart_regs:U_Driver|uart_receiver:receiver|uart_rfifo:fifo_rx|raminfr:rfifo
clk => ram.we_a.CLK
clk => ram.waddr_a[4].CLK
clk => ram.waddr_a[3].CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => ram.CLK0
we => ram.we_a.DATAIN
we => ram.WE
a[0] => ram.waddr_a[0].DATAIN
a[0] => ram.WADDR
a[1] => ram.waddr_a[1].DATAIN
a[1] => ram.WADDR1
a[2] => ram.waddr_a[2].DATAIN
a[2] => ram.WADDR2
a[3] => ram.waddr_a[3].DATAIN
a[3] => ram.WADDR3
dpra[0] => ram.RADDR
dpra[1] => ram.RADDR1
dpra[2] => ram.RADDR2
dpra[3] => ram.RADDR3
di[0] => ram.data_a[0].DATAIN
di[0] => ram.DATAIN
di[1] => ram.data_a[1].DATAIN
di[1] => ram.DATAIN1
di[2] => ram.data_a[2].DATAIN
di[2] => ram.DATAIN2
di[3] => ram.data_a[3].DATAIN
di[3] => ram.DATAIN3
di[4] => ram.data_a[4].DATAIN
di[4] => ram.DATAIN4
di[5] => ram.data_a[5].DATAIN
di[5] => ram.DATAIN5
di[6] => ram.data_a[6].DATAIN
di[6] => ram.DATAIN6
di[7] => ram.data_a[7].DATAIN
di[7] => ram.DATAIN7
dpo[0] <= ram.DATAOUT
dpo[1] <= ram.DATAOUT1
dpo[2] <= ram.DATAOUT2
dpo[3] <= ram.DATAOUT3
dpo[4] <= ram.DATAOUT4
dpo[5] <= ram.DATAOUT5
dpo[6] <= ram.DATAOUT6
dpo[7] <= ram.DATAOUT7


